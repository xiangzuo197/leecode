
网易提前批
1.有一类二叉树用三叉链表来存储的时候除了带有指向左右孩子节点的两个指针，还有指向父节点的指针
那么这样一棵二叉树有2个节点，那么有多少指针指向NULL（注：根节点的父指针指向NULL，对于不存在的节点表示为NULL）？

每个节点有3个指针，两个节点一共6个指针，其中A节点父节点指向B节点， 
B节点子节点指向A节点，剩下的4个节点全部是NULL

2.图N是有7个顶点的强连通图，那么N是有向图，那么N最少有（）条边?如N为无向图，N最少有（）条边？ 
强连通图,指有向图中,任意两点之间都有路径.则最少情况是这N个点排成环.
连通图,是无向图中,任意两点间有路径,只需要这N点排成一条线然后相邻的连接起来.

N为有向图则为一个环，N为无向图则为一条线


3.下列最短路径算法的叙述中正确的是（B）

    A Dijkstra算法通常用于求每一对顶点间的最短路径；

    B Dijkstra算法不允许图中带有负权值的边，而Floyd算法则可以适用；

    C Floyd算法通常用于求某一顶点到其他各顶点的最短路径；

    D Floyd算法允许有包含负权值的边组成的回路，而Dijkstra算法不允许；
  4.判断一个数组或序列是正序,倒序还是乱序,需要我们将这个数组完整的遍历一遍通过构建有序序列，对于未排序数据，在已排序序列中从后向前扫描，找到相应的位置并插入的排序算法是（ ） 
  插入排序
  


选择排序：每次从数组中选出一个最小数（最大数）放到数组最前面，存放在序列的起始位置，直到全部待排序的数据元素排完。
希尔排序：设置增量分割数组，逐步进行直接插入排序,增量逐趟减少,并最后使得整个数组基本有序,再对整体进行直接插入排序。
插入排序：构建有序序列，未排序数据依次从已排序数据按从后往前比较，插入到合适的位置。
归并排序：把序列分成两个长度为n/2的子序列，对这两个子序列分别归并排序（循环将两个数组的第一个值比较，并弹出第一个值， 直到数组长度都不存在），将两个排序好的子序列合并成一个最终的排序序列

8.当x在[x1,x2]非0，其余情况为0，则以下是x的概率密度p(x)的最大熵估计是
高斯分布

编程：小易给你一个包含n个数字的数组。你可以对这个数组执行任意次以下交换操作：
对于数组中的两个下标i,j(1<=i,j<=n)，如果为奇数，就可以交换a_i和a_j。

现在允许你使用操作次数不限，小易希望你能求出在所有能通过若干次操作可以得到的数组中，字典序最小的一个是什么。
def solve(nums):
    if len(nums) == 0:
        return []
    odd = 0
    for i in range(len(nums)):
        if nums[i] % 2 == 0:
            odd += 1
    if odd == 0&nbs***bsp;odd == len(nums):
        return nums
    else: return sorted(nums)
 
n = int(input())
nums = list(map(int,input().split()))
res = solve(nums)
for i in range(n):
    print(res[i],end = ' ')
    
    
 

